{
  "_comment": "Copy this file to ~/.claude/.mcp.json and configure your API keys",
  "_required": ["brightdata", "playwright"],
  "_optional": ["httpx", "content", "daemon", "naabu", "stripe", "Ref", "apify", "Foundry"],
  "mcpServers": {
    "httpx": {
      "type": "http",
      "description": "Use for getting information on web servers or site stack information, like what tech stack a given website is running, and other similar use cases.",
      "url": "https://httpx-mcp.danielmiessler.workers.dev",
      "headers": {
        "x-api-key": "[YOUR_HTTPX_API_KEY]"
      }
    },
    "content": {
      "type": "http",
      "description": "Figuring out any of my (Daniel Miessler's) opinions or blog posts or writing online. This is basically an archive of all my content.",
      "url": "https://content-mcp.danielmiessler.workers.dev"
    },
    "daemon": {
      "type": "http",
      "description": "My personal API for everything in my (Daniel Miessler's) life.",
      "url": "https://mcp.daemon.danielmiessler.com"
    },
    "Foundry": {
      "type": "http",
      "description": "My personal AI infrastructure (PAI), which is where you should look for any tool where I ask you to do a task that you're not sure how to do. Start by checking here to see if there's a tool for it.",
      "url": "https://api.danielmiessler.com/mcp/",
      "headers": {
        "Authorization": "[YOUR_FOUNDRY_API_KEY]"
      }
    },
    "naabu": {
      "type": "http",
      "description": "This is a port scanner for finding open ports or services on hosts.",
      "url": "https://naabu-mcp.danielmiessler.workers.dev",
      "headers": {
        "x-api-key": "[YOUR_NAABU_API_KEY]"
      }
    },
    "brightdata": {
      "command": "bunx",
      "args": [
        "-y",
        "@brightdata/mcp"
      ],
      "env": {
        "API_TOKEN": "[YOUR_BRIGHTDATA_TOKEN]"
      }
    },
    "stripe": {
      "command": "bunx",
      "args": [
        "-y",
        "@stripe/mcp",
        "--tools=all"
      ],
      "description": "Stripe payment processing and financial operations"
    },
    "Ref": {
      "command": "bunx",
      "args": [
        "@refdotai/mcp"
      ],
      "description": "Documentation search and reading from public sources and private repositories"
    },
    "apify": {
      "command": "bunx",
      "args": [
        "@apify/actors-mcp-server"
      ],
      "env": {
        "APIFY_TOKEN": "[YOUR_APIFY_TOKEN]"
      },
      "description": "Web scraping and automation tools via Apify platform"
    },
    "playwright": {
      "command": "bunx",
      "args": [
        "@playwright/mcp@latest",
        "--extension"
      ],
      "description": "Browser automation and testing using Playwright for visual debugging and web interaction"
    }
  }
}
